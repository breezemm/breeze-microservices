# name: 'breeze-development'

volumes:
  gateway-database:
  wallet-database:
  redis:

networks:
  dev:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    env_file: .env
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - dev

  kafka:
    restart: on-failure
    image: confluentinc/cp-kafka:7.5.1
    env_file:
      .env
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    expose:
      - 29092
    networks:
      - dev
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 5s
      timeout: 10s
      retries: 5


  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    env_file: .env
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8089:8089
    networks:
      - dev

  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    env_file: .env
    container_name: kafka-manager
    depends_on:
      - kafka
    ports:
      - 10000:9000
    networks:
      - dev

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - dev

  redis:
    image: redis:alpine
    env_file: .env
    container_name: redis
    volumes:
      - redis:/data
    ports:
      - 6379:6379
    networks:
      - dev
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s

  gateway:
    restart: always
    container_name: gateway
    build:
      args:
        uid: 1000
        user: breeze
      context: ./apps/gateway
      dockerfile: dev.dockerfile
    ports:
      - 8001:80
    volumes:
      - ./apps/gateway:/var/www/gateway
    depends_on:
      kafka:
        condition: service_healthy
      gateway-mysql:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

    networks:
      - dev

  wallet:
    build:
      args:
        uid: 1000
        user: breeze
      context: ./apps/wallet
      dockerfile: dev.dockerfile
    ports:
      - 8002:80
    volumes:
      - ./apps/wallet:/var/www/wallet
    depends_on:
      - wallet-mysql
      - redis
      - kafka
    networks:
      - dev

  suggestion:
    build:
      context: .
      dockerfile: ./apps/suggestion/dev.dockerfile
      target: development
    command: pnpm run dev --filter suggestion
    ports:
      - 8003:80
    volumes:
      - .:/usr/src/app
      - /var/www/suggestion/node_modules
    depends_on:
      - kafka
    networks:
      - dev

  notification:
    build:
      context: .
      dockerfile: ./apps/notification/dev.dockerfile
      target: development
    command: pnpm run dev --filter notification
    ports:
      - 8004:80
    volumes:
      - .:/usr/src/app
      - /var/www/notification/node_modules
    depends_on:
      - kafka
    networks:
      - dev

  gateway-mysql:
    image: mysql/mysql-server:8.0
    env_file: ./apps/gateway/.env
    ports:
      - 33061:3306
    volumes:
      - gateway-database:/var/lib/mysql
    networks:
      - dev

  wallet-mysql:
    image: mysql/mysql-server:8.0
    env_file: ./apps/wallet/.env
    ports:
      - 33062:3306
    volumes:
      - wallet-database:/var/lib/mysql
    networks:
      - dev
