networks:
  dev:
    name: breeze_development
    ipam:
      driver: default
      config:
        - subnet: 172.28.200.0/24
          ip_range: 172.28.200.0/24
          gateway: 172.28.200.1

volumes:
  mysql:
  redis:
  kafka:
  gateway:

services:
  php:
    build:
      context: ./infra/docker/php
      args:
        PHP_VERSION: ${PHP_VERSION}
        FRANKEN_VERSION: ${FRANKEN_VERSION}
    image: breeze/php
    container_name: breeze_php

  node:
    build:
      context: ./infra/docker/node
      args:
        NODE_VERSION: ${NODE_VERSION}
        ALPINE_VERSION: ${ALPINE_VERSION}
    image: breeze/node
    container_name: breeze_node

  nginx:
    build:
      context: ./infra/docker/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    image: breeze/nginx
    container_name: breeze_nginx
    depends_on:
      gateway:
        condition: service_healthy
      wallets:
        condition: service_healthy
      notifications:
        condition: service_healthy
      suggestion:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "nginx" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.11
    ports:
      - "80:80"
      - "443:443"

  mysql:
    restart: always
    build:
      context: ./infra/docker/mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    image: breeze/mysql
    container_name: breeze_mysql
    env_file: .env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${MYSQL_PASSWORD}" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.12
    volumes:
      - 'mysql:/var/lib/mysql'

  redis:
    restart: always
    image: redis:${REDIS_VERSION}-alpine${ALPINE_VERSION}
    container_name: breeze_redis
    env_file: .env
    command: /bin/sh -c 'redis-server --requirepass ${REDIS_PASSWORD}'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.13
    volumes:
      - 'redis:/data'

  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:${ZOOKEEPER_VERSION}
    container_name: breeze_zookeeper
    env_file: .env
    healthcheck:
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.14

  kafka:
    restart: always
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    container_name: breeze_kafka
    env_file: .env
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092" ]
      retries: 3
      timeout: 30s
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      dev:
        ipv4_address: 172.28.200.15
    volumes:
      - 'kafka:/var/lib/kafka'

  gateway:
    restart: always
    build:
      context: ./apps/gateway
    image: breeze/gateway
    container_name: breeze_gateway
    env_file: ./apps/gateway/.env
    environment:
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
    depends_on:
      php:
        condition: service_healthy
      node:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mailpit:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-I", "gateway/health" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.16
    volumes:
      - 'gateway:/var/www/gateway/storage'
      - './apps/gateway:/var/www/gateway'

  wallets:
    restart: always
    build:
      context: ./apps/wallets
    image: breeze/wallets
    container_name: breeze_wallets
    env_file: ./apps/wallets/.env
    environment:
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      php:
        condition: service_healthy
      node:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-I", "wallets/health" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.17
    volumes:
      - './apps/wallets:/var/www/wallets'

  notifications:
    restart: always
    build:
      context: ./apps/notifications
    image: breeze/notifications
    container_name: breeze_notifications
    env_file: ./apps/notifications/.env
    environment:
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      php:
        condition: service_healthy
      node:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-I", "wallets/health" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.18
    volumes:
      - './apps/notifications:/var/www/notifications'

  suggestion:
    restart: always
    build:
      context: ./apps/suggestion
    image: breeze/suggestion
    container_name: breeze_suggestion
    env_file: ./apps/suggestion/.env
    healthcheck:
      test: [ "CMD", "node", "healthcheck.js" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.19
    volumes:
      - './apps/suggestion:/var/www/suggestion'

  mailpit:
    restart: always
    image: axllent/mailpit:${MAILPIT_VERSION}
    container_name: breeze_mailpit
    healthcheck:
      test: [ "CMD", "nc", "-z", "mailpit", "8025" ]
      retries: 3
      timeout: 5s
    networks:
      dev:
        ipv4_address: 172.28.200.20
    ports:
      - "8025:8025"
